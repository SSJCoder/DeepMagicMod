// &newFXSpellThrust (x, y, colour, pixel-size, rotation, lifetime);
&newFXSpellThrust (x, y, color_, px_, rot_, life_) {
	@with (create( x, y, &oFXSpellThrust )) {
		// set depth
		depth = -1000;
		// set sprite
		sprite_index = sFXSpellThrust;
		
		// store time
		time = Time();
		
		// set properties
		color = color_;
		 size = px_/sprite_get_width(sprite_index);
		  rot = rot_;
		 life = life_;
		
		// calculate position relative to player's arm
		@with (oChar) {
			other.dst = point_distance( arm.x, arm.y, other.x, other.y );
		}
		
		StayOnArm = @fn {
			// stay on player's arm ..
			@with (oChar) {
				other.x   = arm.x+lenx( other.dst, arm.image_angle );
				other.y   = arm.y+leny( other.dst, arm.image_angle );
				other.rot = arm.image_angle;
			}
		}
		
		StayOnArm();
		
		@ret id;
		
	}
}

&oFXSpellThrust => object_add();
@onmain {
	event( &oFXSpellThrust, 'step', @fn {
		// lifetime
		@test ( Time()-time > life ) {
			destroy();
		}
		
		// stay on player's arm ..
		StayOnArm();
		
	});
	
	event( &oFXSpellThrust, 'draw', @fn {
		// get time left
		t~= 1-(Time()-time)/life;
		
		// drawing variables
		image_xscale = size*(1+0.3*(1-t));
		image_yscale = size*(1+0.3*(1-t));
		image_blend  = color;
		image_alpha  = t*0.65;
		image_angle  = rot;
		
		draw_set_blend_mode( bm_add );
		draw_self();
		draw_set_blend_mode( bm_normal );
		
	});
}

